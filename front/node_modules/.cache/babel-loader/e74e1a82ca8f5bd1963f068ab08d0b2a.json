{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elayne\\\\Documents\\\\hotelIfba-front\\\\src\\\\pages\\\\reservas\\\\registerReserva.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { getAllServico } from \"../../services/api/servicos\";\nimport { getQuartosDisponiveis } from \"../../services/api/quartos\";\nimport { addReserva } from \"../../services/api/reservas\";\nimport { ReservaFieldsValidation } from \"./reservaFieldsValidation.js\";\nimport swal from 'sweetalert';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  table: {\n    minWidth: 700\n  }\n}));\nexport default function ControlledOpenSelect() {\n  _s();\n\n  const classes = useStyles();\n  const [servicoId, setServico] = React.useState('');\n  const [servicos, setServicoCombo] = useState('');\n  const [open, setOpen] = React.useState(false);\n  const [data_entrada, setData_entrada] = useState('');\n  const [data_saida, setData_saida] = useState('');\n  const [quantidade_pessoas, setQuantidade_pessoas] = useState('');\n  const [cliente, setClienteId] = useState('');\n  const [quartoNumber, setNumeroQuarto] = React.useState('');\n  const [quartoId, setQuarto] = React.useState('');\n  const [cartao, setCartao] = useState('');\n  const id = localStorage.getItem('id');\n\n  function validationField(data_entrada, data_saida, quantidade_pessoas, cliente, servico, quarto) {\n    cliente = id;\n    var error = ReservaFieldsValidation(data_entrada, data_saida, quantidade_pessoas, cliente, servico, quarto);\n\n    if (error) {\n      swal(`${error}`);\n      return true;\n    }\n  }\n\n  function cleanField() {\n    setNumeroQuarto(\"\");\n    setServico(\"\");\n    setData_entrada(\"\");\n    setData_saida(\"\");\n    setQuantidade_pessoas(\"\");\n    setNumeroQuarto(\"\");\n    setCartao(\"\");\n    setClienteId(\"\");\n  }\n\n  async function handleSave() {\n    if (!validationField(data_entrada, data_saida, quantidade_pessoas, cliente, servicoId, quartoId)) {\n      let reserva = {\n        data_entrada,\n        data_saida,\n        quantidade_pessoas: parseInt(quantidade_pessoas),\n        cliente,\n        servico: parseInt(servicoId),\n        quarto: parseInt(quartoId),\n        cartao\n      };\n\n      async function getResponse() {\n        const data = await addReserva(reserva);\n\n        if (data != null) {\n          swal(\"Reserva cadastrada!\", \"\", \"success\");\n        } else swal(\"Houve um erro\", \"Verifique as informações e tente novamente\", \"error\");\n      }\n\n      getResponse();\n      cleanField();\n    }\n  }\n\n  const handleChangeQuarto = event => {\n    setQuantidade_pessoas(event.target.value);\n\n    async function getQuartos() {\n      try {\n        const data = await getQuartosDisponiveis(event.target.value);\n        setNumeroQuarto(data.data.numero);\n        setQuarto(data.data.id);\n      } catch (error) {}\n    }\n\n    getQuartos();\n  };\n\n  useEffect(() => {\n    async function getServicos() {\n      try {\n        const data = await getAllServico();\n        setServicoCombo(data.data);\n      } catch (error) {}\n    }\n\n    getServicos();\n  }, []);\n\n  const handleChange = event => {\n    setServico(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conteudoReserva\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Registre uma Reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"date\",\n            label: \"Quantidade de Pessoas *\",\n            type: \"int\",\n            defaultValue: \"2\",\n            className: classes.textField,\n            value: quantidade_pessoas,\n            onChange: handleChangeQuarto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"date\",\n            label: \"N\\xFAmero do Cart\\xE3o *\",\n            type: \"int\",\n            defaultValue: \"5381579886310193\",\n            className: classes.textField,\n            value: cartao,\n            onChange: e => setCartao(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            disabled: true,\n            id: \"date\",\n            label: \"N\\xFAmero do Quarto *\",\n            type: \"int\",\n            defaultValue: \"0\",\n            className: classes.textField,\n            value: quartoNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.textField,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-controlled-open-select-label\",\n              children: \"Servi\\xE7os *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-controlled-open-select-label\",\n              id: \"demo-controlled-open-select\",\n              open: open,\n              onClose: handleClose,\n              onOpen: handleOpen,\n              value: servicoId,\n              onChange: handleChange,\n              children: [servicos.length > 0 && servicos.map(servico => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: servico.id,\n                children: servico.tipo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 37\n              }, this)), \";\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"date\",\n            label: \"Data de Entrada *\",\n            type: \"datetime-local\",\n            defaultValue: \"2017-05-24T10:30\",\n            className: classes.textField,\n            value: data_entrada,\n            onChange: e => setData_entrada(e.target.value),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"date\",\n            label: \"Data de Sa\\xEDda *\",\n            type: \"datetime-local\",\n            defaultValue: \"2017-05-24T10:30\",\n            className: classes.textField,\n            value: data_saida,\n            onChange: e => setData_saida(e.target.value),\n            InputLabelProps: {\n              shrink: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"texto\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: () => handleSave(),\n            children: \"Registrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ControlledOpenSelect, \"ufOsIRhSzJwMceEqd10FMvjXEbQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = ControlledOpenSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledOpenSelect\");","map":{"version":3,"sources":["C:/Users/elayne/Documents/hotelIfba-front/src/pages/reservas/registerReserva.js"],"names":["React","useEffect","useState","makeStyles","InputLabel","MenuItem","FormControl","Select","TextField","Button","getAllServico","getQuartosDisponiveis","addReserva","ReservaFieldsValidation","swal","CssBaseline","Container","useStyles","theme","textField","marginLeft","spacing","marginRight","width","table","minWidth","ControlledOpenSelect","classes","servicoId","setServico","servicos","setServicoCombo","open","setOpen","data_entrada","setData_entrada","data_saida","setData_saida","quantidade_pessoas","setQuantidade_pessoas","cliente","setClienteId","quartoNumber","setNumeroQuarto","quartoId","setQuarto","cartao","setCartao","id","localStorage","getItem","validationField","servico","quarto","error","cleanField","handleSave","reserva","parseInt","getResponse","data","handleChangeQuarto","event","target","value","getQuartos","numero","getServicos","handleChange","handleClose","handleOpen","e","length","map","tipo","shrink"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getAllServico } from \"../../services/api/servicos\";\r\nimport { getQuartosDisponiveis } from \"../../services/api/quartos\";\r\nimport { addReserva } from \"../../services/api/reservas\";\r\nimport { ReservaFieldsValidation } from \"./reservaFieldsValidation.js\";\r\nimport swal from 'sweetalert';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    table: {\r\n        minWidth: 700,\r\n      },\r\n}));\r\n\r\nexport default function ControlledOpenSelect() {\r\n    const classes = useStyles();\r\n    const [servicoId, setServico] = React.useState('');\r\n    const [servicos, setServicoCombo] = useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [data_entrada, setData_entrada] = useState('');\r\n    const [data_saida, setData_saida] = useState('');\r\n    const [quantidade_pessoas, setQuantidade_pessoas] = useState('');\r\n    const [cliente, setClienteId] = useState('');\r\n    const [quartoNumber, setNumeroQuarto] = React.useState('');\r\n    const [quartoId, setQuarto] = React.useState('');\r\n    const [cartao, setCartao] = useState('');\r\n\r\n    const id = localStorage.getItem('id');\r\n\r\n    function validationField(data_entrada, data_saida, quantidade_pessoas, cliente, servico, quarto) {\r\n        cliente = id\r\n        var error = ReservaFieldsValidation(data_entrada, data_saida, quantidade_pessoas, cliente, servico, quarto);\r\n\r\n        if (error) {\r\n            swal(`${error}`);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function cleanField() {\r\n        setNumeroQuarto(\"\");\r\n        setServico(\"\");\r\n        setData_entrada(\"\");\r\n        setData_saida(\"\");\r\n        setQuantidade_pessoas(\"\");\r\n        setNumeroQuarto(\"\");\r\n        setCartao(\"\")\r\n        setClienteId(\"\")\r\n    }\r\n\r\n    async function handleSave() {\r\n\r\n        if (!validationField(data_entrada, data_saida, quantidade_pessoas, cliente, servicoId, quartoId)) {\r\n            let reserva = { data_entrada, data_saida, quantidade_pessoas: parseInt(quantidade_pessoas), cliente, servico: parseInt(servicoId), quarto: parseInt(quartoId), cartao }\r\n\r\n            async function getResponse() {\r\n\r\n                const data = await addReserva(reserva);\r\n\r\n                if (data != null) {\r\n                    swal(\"Reserva cadastrada!\", \"\", \"success\");\r\n                }\r\n                else\r\n                    swal(\"Houve um erro\", \"Verifique as informações e tente novamente\", \"error\");\r\n            }\r\n            getResponse();\r\n            cleanField()\r\n        }\r\n    }\r\n\r\n    const handleChangeQuarto = (event) => {\r\n        setQuantidade_pessoas(event.target.value);\r\n\r\n        async function getQuartos() {\r\n            try {\r\n                const data = await getQuartosDisponiveis(event.target.value);\r\n                setNumeroQuarto(data.data.numero);\r\n                setQuarto(data.data.id);\r\n            } catch (error) {\r\n            }\r\n        }\r\n        getQuartos();\r\n    };\r\n\r\n    useEffect(() => {\r\n        async function getServicos() {\r\n            try {\r\n                const data = await getAllServico();\r\n                setServicoCombo(data.data);\r\n            } catch (error) {\r\n            }\r\n        }\r\n        getServicos();\r\n    }, []);\r\n\r\n    const handleChange = (event) => {\r\n        setServico(event.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div className='conteudoReserva'>\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container>\r\n                <div className=\"texto\">\r\n                    <h1>Registre uma Reserva</h1>\r\n                </div>\r\n                <div className=\"texto\">\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Quantidade de Pessoas *\"\r\n                        type=\"int\"\r\n                        defaultValue=\"2\"\r\n                        className={classes.textField}\r\n                        value={quantidade_pessoas}\r\n                        onChange={handleChangeQuarto}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"texto\">\r\n\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Número do Cartão *\"\r\n                        type=\"int\"\r\n                        defaultValue=\"5381579886310193\"\r\n                        className={classes.textField}\r\n                        value={cartao}\r\n                        onChange={(e) => setCartao(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"texto\">\r\n                    <TextField disabled\r\n                        id=\"date\"\r\n                        label=\"Número do Quarto *\"\r\n                        type=\"int\"\r\n                        defaultValue=\"0\"\r\n                        className={classes.textField}\r\n                        value={quartoNumber}\r\n                    />\r\n                </div>\r\n                <div className=\"texto\">\r\n                    <FormControl className={classes.textField}>\r\n                        <InputLabel id=\"demo-controlled-open-select-label\">Serviços *</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-controlled-open-select-label\"\r\n                            id=\"demo-controlled-open-select\"\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            onOpen={handleOpen}\r\n                            value={servicoId}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {servicos.length > 0 && servicos.map(servico => (\r\n                                    <MenuItem value={servico.id}>{servico.tipo}</MenuItem>\r\n                                ))};\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <div className=\"texto\">\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Data de Entrada *\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        className={classes.textField}\r\n                        value={data_entrada}\r\n                        onChange={(e) => setData_entrada(e.target.value)}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"texto\">\r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\"Data de Saída *\"\r\n                        type=\"datetime-local\"\r\n                        defaultValue=\"2017-05-24T10:30\"\r\n                        className={classes.textField}\r\n                        value={data_saida}\r\n                        onChange={(e) => setData_saida(e.target.value)}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"texto\">\r\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={() => handleSave()}>Registrar</Button>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}