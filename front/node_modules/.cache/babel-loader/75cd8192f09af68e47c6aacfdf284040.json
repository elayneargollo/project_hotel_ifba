{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elayne\\\\Documents\\\\hotelIfba-front\\\\src\\\\contexts\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { login } from '../services/api/users';\nimport axios from '../config/axios';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext();\n\nfunction AuthProvider({\n  children\n}) {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      axios.defaults.headers.Authorization = `Token ${JSON.parse(token)}`;\n      setAuthenticated(true);\n    }\n  }, []);\n\n  async function handleLogin(username, password) {\n    let credentials = {\n      username,\n      password\n    };\n    const {\n      data: {\n        token,\n        user_id\n      }\n    } = await login(credentials);\n\n    if (token === null) {\n      swal(\"Falha durante autenticação\");\n      return;\n    }\n\n    localStorage.setItem('token', JSON.stringify(token));\n    localStorage.setItem('id', user_id);\n    axios.defaults.headers.Authorization = `Token ${token}`;\n    setAuthenticated(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      authenticated,\n      handleLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"+nyo0O1WmcKNkwQZH3xRKUoDvQ8=\");\n\n_c = AuthProvider;\nexport { Context, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/elayne/Documents/hotelIfba-front/src/contexts/auth.js"],"names":["React","createContext","useState","useEffect","login","axios","swal","Context","AuthProvider","children","authenticated","setAuthenticated","token","localStorage","getItem","defaults","headers","Authorization","JSON","parse","handleLogin","username","password","credentials","data","user_id","setItem","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,OAAO,gBAAGN,aAAa,EAA7B;;AAEA,SAASO,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AAAA;;AAE/B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAIF,KAAJ,EAAW;AACTP,MAAAA,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,aAAvB,GAAwC,SAAQC,IAAI,CAACC,KAAL,CAAWP,KAAX,CAAkB,EAAlE;AACAD,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AAEJ,GARQ,EAQN,EARM,CAAT;;AAWA,iBAAeS,WAAf,CAA2BC,QAA3B,EAAqCC,QAArC,EACA;AACI,QAAIC,WAAW,GAAG;AAAEF,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAlB;AACA,UAAM;AAAEE,MAAAA,IAAI,EAAE;AAAEZ,QAAAA,KAAF;AAAUa,QAAAA;AAAV;AAAR,QAAgC,MAAMrB,KAAK,CAACmB,WAAD,CAAjD;;AAEA,QAAGX,KAAK,KAAK,IAAb,EACA;AACIN,MAAAA,IAAI,CAAC,4BAAD,CAAJ;AACA;AACH;;AAEDO,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAef,KAAf,CAA9B;AACAC,IAAAA,YAAY,CAACa,OAAb,CAAqB,IAArB,EAA2BD,OAA3B;AACApB,IAAAA,KAAK,CAACU,QAAN,CAAeC,OAAf,CAAuBC,aAAvB,GAAwC,SAAQL,KAAM,EAAtD;AAEAD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AAED,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAED,MAAAA,aAAF;AAAiBU,MAAAA;AAAjB,KAAzB;AAAA,cACKX;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCQD,Y;;KAAAA,Y;AAwCT,SAASD,OAAT,EAAkBC,YAAlB","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { login } from '../services/api/users';\r\nimport axios from '../config/axios'; \r\nimport swal from 'sweetalert';\r\n\r\nconst Context = createContext();\r\n\r\nfunction AuthProvider({ children }){\r\n\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n    \r\n        if (token) {\r\n          axios.defaults.headers.Authorization = `Token ${JSON.parse(token)}`;\r\n          setAuthenticated(true);\r\n        }\r\n    \r\n    }, []);\r\n\r\n\r\n    async function handleLogin(username, password)\r\n    {\r\n        let credentials = { username, password };\r\n        const { data: { token,  user_id} }  = await login(credentials)\r\n\r\n        if(token === null)\r\n        {\r\n            swal(\"Falha durante autenticação\");\r\n            return;\r\n        }\r\n\r\n        localStorage.setItem('token', JSON.stringify(token))\r\n        localStorage.setItem('id', user_id)\r\n        axios.defaults.headers.Authorization = `Token ${token}`;\r\n\r\n        setAuthenticated(true);\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{ authenticated, handleLogin }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport { Context, AuthProvider};"]},"metadata":{},"sourceType":"module"}